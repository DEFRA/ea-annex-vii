<Activity mc:Ignorable="sap sap2010" x:Class="Parent_State_Machine" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="997,1189" sap2010:WorkflowViewState.IdRef="ReFramework_Example_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:r="clr-namespace:Reusable_Components;assembly=Reusable Components" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:sn="clr-namespace:System.Net;assembly=System" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ufa="clr-namespace:UiPath.Form.Activities;assembly=UiPath.Form.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:us="clr-namespace:UiPathTeam.SharePoint;assembly=UiPathTeam.SharePoint" xmlns:usa="clr-namespace:UiPathTeam.SharePoint.Activities;assembly=UiPathTeam.SharePoint.Activities" xmlns:usal="clr-namespace:UiPathTeam.SharePoint.Activities.Libraries;assembly=UiPathTeam.SharePoint.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="31">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Windows</x:String>
      <x:String>Microsoft.SharePoint.Client</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.Runtime</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID4}" DisplayName="EA Annex VII" sap:VirtualizedContainerService.HintSize="1001,932" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">340,2.5</av:Point>
        <x:Double x:Key="StateContainerWidth">967</x:Double>
        <x:Double x:Key="StateContainerHeight">896</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">388,77.5 388,107.5 358.5,107.5 358.5,119.5</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID2" DisplayName="Initial State" sap:VirtualizedContainerService.HintSize="158,87" sap2010:WorkflowViewState.IdRef="State_1">
      <State.Entry>
        <Sequence DisplayName="Start Process PopUp" sap:VirtualizedContainerService.HintSize="691,1540" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="strStartFormData" />
            <Variable x:TypeArguments="x:String" Name="strRunType" />
            <Variable x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)" Name="ienJobs" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="649,589" sap2010:WorkflowViewState.IdRef="TryCatch_7">
            <TryCatch.Try>
              <Sequence DisplayName="Get job and assess source" sap:VirtualizedContainerService.HintSize="611,362" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetJobs Skip="{x:Null}" TimeoutMS="{x:Null}" Top="{x:Null}" DisplayName="Get Current Job" Filter="[&quot;Robot/Username eq  '&quot; &amp; environment.UserDomainName &amp; &quot;' AND ReleaseName eq 'Demo Robot'&quot;]" FolderPath="[dictConfig(&quot;Orchestrator Folder Path&quot;)]" sap:VirtualizedContainerService.HintSize="569,22" sap2010:WorkflowViewState.IdRef="GetJobs_2" Result="[ienJobs]" />
                <If Condition="[ienJobs(0).Source = &quot;Agent&quot;]" DisplayName="If Attended" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <Assign DisplayName="Set attended run type" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strRunType]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Attended</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Set unattended run type" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strRunType]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Unattended</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="615,21" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Assign DisplayName="Set attended run type" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strRunType]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Attended</InArgument>
                    </Assign.Value>
                  </Assign>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <ui:LogMessage DisplayName="Log Start" sap:VirtualizedContainerService.HintSize="649,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Starting Workflow - Main&quot;]" />
          <If Condition="[strRunType = &quot;Attended&quot;]" DisplayName="If Attended" sap:VirtualizedContainerService.HintSize="649,334" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <ufa:FormActivity Dismissed="{x:Null}" FormFieldsInputData="{x:Null}" LocalCSSFilePath="{x:Null}" SelectedButton="{x:Null}" TimeoutInSeconds="{x:Null}" WindowPositionLeft="{x:Null}" WindowPositionTop="{x:Null}" DisableMaximizeButton="False" DisableMinimizeButton="True" DisplayName="Annex VII Start Form" FormFieldsOutputData="[strStartFormData]" FormHeight="500" FormSchema="%[{&quot;tag&quot;:&quot;h3&quot;,&quot;refreshOnChange&quot;:true,&quot;content&quot;:&quot;{{data.Header}}&quot;,&quot;key&quot;:&quot;label&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Label&quot;,&quot;type&quot;:&quot;label&quot;},{&quot;label&quot;:&quot;Process Type&quot;,&quot;optionsLabelPosition&quot;:&quot;right&quot;,&quot;tooltip&quot;:&quot;Batch mode will process every available email, single email will only complete the first email available.&quot;,&quot;inline&quot;:false,&quot;tableView&quot;:false,&quot;values&quot;:[{&quot;label&quot;:&quot;Batch Mode&quot;,&quot;value&quot;:&quot;batch&quot;,&quot;shortcut&quot;:&quot;B&quot;},{&quot;label&quot;:&quot;Single Email&quot;,&quot;value&quot;:&quot;single&quot;,&quot;shortcut&quot;:&quot;S&quot;}],&quot;key&quot;:&quot;processType&quot;,&quot;type&quot;:&quot;radio&quot;,&quot;input&quot;:true},{&quot;columns&quot;:[{&quot;components&quot;:[{&quot;label&quot;:&quot;Start Process&quot;,&quot;theme&quot;:&quot;success&quot;,&quot;size&quot;:&quot;lg&quot;,&quot;disableOnInvalid&quot;:true,&quot;tableView&quot;:false,&quot;key&quot;:&quot;submit&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;type&quot;:&quot;button&quot;,&quot;input&quot;:true,&quot;hideOnChildrenHidden&quot;:false}],&quot;offset&quot;:0,&quot;push&quot;:0,&quot;pull&quot;:0,&quot;size&quot;:&quot;xs&quot;,&quot;width&quot;:3},{&quot;components&quot;:[{&quot;label&quot;:&quot;Stop Process&quot;,&quot;theme&quot;:&quot;danger&quot;,&quot;size&quot;:&quot;lg&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;stop&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;hideOnChildrenHidden&quot;:false}],&quot;offset&quot;:0,&quot;push&quot;:0,&quot;pull&quot;:0,&quot;size&quot;:&quot;xs&quot;,&quot;width&quot;:3}],&quot;key&quot;:&quot;columns&quot;,&quot;type&quot;:&quot;columns&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false,&quot;label&quot;:&quot;Columns&quot;}]" FormTheme="{}{&quot;Activities&quot;:[&quot;FORMS&quot;],&quot;Id&quot;:&quot;1626861008384&quot;,&quot;Name&quot;:&quot;DRACoE&quot;,&quot;BaseCss&quot;:&quot;../../assets/css/themes/readable.bootstrap.min.css&quot;,&quot;ImageSrc&quot;:&quot;../../assets/themeicons/readable.png&quot;,&quot;OverrideCssUrl&quot;:&quot;&quot;,&quot;UserStyleOverrides&quot;:&quot;body , h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {\n                      font-family : Arial !important;\n                    }table, .btn, .form-control {\n                      font-size : 16px !important;\n                     }h1 {\n                      font-size : 38px !important;\n                    }h2 {\n                      font-size : 32px !important;\n                    }h3 {\n                      font-size : 26px !important;\n                    }h4 {\n                      font-size : 20px !important;\n                    }h5 {\n                      font-size : 16px !important;\n                    }h6 {\n                      font-size : 14px !important;\n                    }body {\n      background:  #ffffff !important;\n      font-size : 16px !important;\n      font-family : Arial !important;\n      color : #333333 !important\n    } .panel-default {\n                        background:   !important;\n                        border-color :   !important;\n                      }\n                 .panel-default &gt; .panel-heading {\n                        background-color:  !important;\n                        color : #333333 !important\n                      }.btn-primary {\n                          background:   !important;\n                          border-color:   !important;\n                          color:   !important;\n                      } .btn-primary:hover {\n                          background:   !important;\n                          color:   !important;\n                      } .btn-default {\n                        background:   !important;\n                        border-color:   !important;\n                        color:   !important;\n                      } .btn-default:hover {\n                        background:   !important;\n                        color:   !important;\n                      } &quot;,&quot;Properties&quot;:&quot;&quot;,&quot;IsCustomTheme&quot;:true,&quot;Version&quot;:1,&quot;ThemeVersion&quot;:1}" FormTitle="Robot is ready to start" FormWidth="800" GenerateInputFields="False" sap:VirtualizedContainerService.HintSize="300,186" sap2010:WorkflowViewState.IdRef="FormActivity_1" IsReadOnly="False" MaxColumnsForSchemaGeneration="6" RunDoBlockFirst="False" RunInIsolatedMode="False">
                <ufa:FormActivity.Body>
                  <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                    <Assign DisplayName="Deserialise output" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                      <Assign.To>
                        <OutArgument x:TypeArguments="njl:JObject">[jsonOutput]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="njl:JObject">[JsonConvert.DeserializeObject(Of JObject)(strStartFormData)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </ActivityAction>
                </ufa:FormActivity.Body>
                <ufa:FormActivity.DelayBody>
                  <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                    <Delay Duration="00:00:00.2500000" sap2010:WorkflowViewState.IdRef="Delay_1" />
                  </ActivityAction>
                </ufa:FormActivity.DelayBody>
                <ufa:FormActivity.FormFieldsCollection>
                  <InArgument x:TypeArguments="x:String" x:Key="Header">[dictConfig("Start Form Title").ToString]</InArgument>
                </ufa:FormActivity.FormFieldsCollection>
              </ufa:FormActivity>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Set output" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Set output" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                  <Assign.To>
                    <OutArgument x:TypeArguments="njl:JObject">[jsonOutput]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="njl:JObject">[new JObject]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <r:Get_Credential DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="649,22" IN_strCredentialName="Sharepoint" IN_strRequestMessage="&lt;b&gt;Please provide your login details for sharepoint&lt;/b&gt;&lt;br&gt;They will be your EA email address and Windows Password respectively." IN_strRequestTitle="Sharepoint credentials required" sap2010:WorkflowViewState.IdRef="Get_Credential_1" OUT_credNetworkCredential="[credSharepointPassword]" />
          <Sequence DisplayName="Start UpSequence" sap:VirtualizedContainerService.HintSize="649,252" sap2010:WorkflowViewState.IdRef="Sequence_37">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Store attachment directory" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_65">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strAttachmentDirectory]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[string.format(dictConfig("Attachment Directory"), Environment.GetEnvironmentVariable("USERPROFILE"))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Set exception to nothing" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_66">
              <Assign.To>
                <OutArgument x:TypeArguments="s:Exception">[exeSystemException]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">291,346.5</av:Point>
          <av:Size x:Key="ShapeSize">158,87</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">124</x:Double>
          <x:Double x:Key="StateContainerHeight">51.079999999999927</x:Double>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="User Declined" sap:VirtualizedContainerService.HintSize="450,796" sap2010:WorkflowViewState.IdRef="Transition_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">362.1,433.5 362.1,457.7 833,457.7</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">21</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID0" DisplayName="End Log" sap:VirtualizedContainerService.HintSize="134,94" sap2010:WorkflowViewState.IdRef="State_3" IsFinal="True">
              <State.Entry>
                <Sequence DisplayName="End actions" sap:VirtualizedContainerService.HintSize="526,431" sap2010:WorkflowViewState.IdRef="Sequence_26">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log End" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Trace" Message="[&quot;Ending Workflow - Main&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <If Condition="[exeSystemException is nothing]" DisplayName="If no exception" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Else>
                      <Throw DisplayName="Throw exception" Exception="[exeSystemException]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                    </If.Else>
                  </If>
                </Sequence>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">833,429.5</av:Point>
                  <av:Size x:Key="ShapeSize">134,94</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">100</x:Double>
                  <x:Double x:Key="StateContainerHeight">58.079999999999927</x:Double>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </State>
          </Transition.To>
          <Transition.Action>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Stop Message" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_13" Text="[&quot;Process has been stopped&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MessageBox>
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="CBool(jsonOutput(&quot;stop&quot;))" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="User Approved" sap:VirtualizedContainerService.HintSize="450,800" sap2010:WorkflowViewState.IdRef="Transition_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:PointCollection x:Key="ConnectorLocation">362.1,433.5 362.1,463.5 340,463.5 340,562.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">18</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="CBool(jsonOutput(&quot;submit&quot;))" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID1" DisplayName="Get Next Case" sap:VirtualizedContainerService.HintSize="160,81" sap2010:WorkflowViewState.IdRef="State_10">
              <State.Entry>
                <TryCatch DisplayName="Try Get email" sap:VirtualizedContainerService.HintSize="438,1111" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Get email" sap:VirtualizedContainerService.HintSize="380,840" sap2010:WorkflowViewState.IdRef="Sequence_12">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="si:DirectoryInfo" Name="dirAttachmentFolder" />
                        <Variable x:TypeArguments="x:Boolean" Name="booDateReceivedBlank" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Set Start Time" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:DateTime">[dateStartTime]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Store Folder info" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                        <Assign.To>
                          <OutArgument x:TypeArguments="si:DirectoryInfo">[dirAttachmentFolder]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="si:DirectoryInfo">[New DirectoryInfo(strAttachmentDirectory)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ForEach x:TypeArguments="si:FileInfo" CurrentIndex="{x:Null}" DisplayName="Delete each file" sap:VirtualizedContainerService.HintSize="338,194" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[dirAttachmentFolder.GetFiles]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="si:FileInfo">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="file" />
                            </ActivityAction.Argument>
                            <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[file.FullName]" />
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                      <Assign DisplayName="Set exception to nothing" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Exception">[exeSystemException]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Get email and save attachments" sap:VirtualizedContainerService.HintSize="338,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Sub Flows\Get email and save attachments.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="IN_strEmailAccount">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dictConfig(&quot;Email Account&quot;)" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="IN_strAttachmentFolder">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dictConfig(&quot;Attachment Directory&quot;)" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="IN_strInProgressFolder">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dictConfig(&quot;Email In Progress Folder&quot;)" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="IN_strInboxFolder">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dictConfig(&quot;Email Inbox Folder&quot;)" />
                          </InArgument>
                          <OutArgument x:TypeArguments="snm:MailMessage" x:Key="OUT_mailCurrentEmail">
                            <mva:VisualBasicReference x:TypeArguments="snm:MailMessage" ExpressionText="mailCurrentEmail" />
                          </OutArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))" x:Key="OUT_dictData">
                            <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))" ExpressionText="dictPDFsData" />
                          </OutArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="IN_dictConfig">
                            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" ExpressionText="dictConfig" />
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:SaveMail DisplayName="Save Mail Message" FilePath="[dictConfig(&quot;Attachment Directory&quot;).ToString &amp; &quot;currentmail.eml&quot;]" sap:VirtualizedContainerService.HintSize="338,87" sap2010:WorkflowViewState.IdRef="SaveMail_1" MailMessage="[mailCurrentEmail]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:SaveMail>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Assign DisplayName="Capture exception" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Exception">[exeSystemException]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="s:IndexOutOfRangeException" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:IndexOutOfRangeException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:IndexOutOfRangeException" Name="exception" />
                        </ActivityAction.Argument>
                        <Assign DisplayName="No Mail" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                          <Assign.To>
                            <OutArgument x:TypeArguments="snm:MailMessage">[mailCurrentEmail]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="snm:MailMessage">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="s:InvalidOperationException" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:InvalidOperationException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:InvalidOperationException" Name="exception" />
                        </ActivityAction.Argument>
                        <Assign DisplayName="No Mail" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                          <Assign.To>
                            <OutArgument x:TypeArguments="snm:MailMessage">[mailCurrentEmail]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="snm:MailMessage">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">300,562.5</av:Point>
                  <av:Size x:Key="ShapeSize">160,81</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">126.19512195121934</x:Double>
                  <x:Double x:Key="StateContainerHeight">45.039999999999964</x:Double>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="No Cases" sap:VirtualizedContainerService.HintSize="479,1196" sap2010:WorkflowViewState.IdRef="Transition_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">356,643.5 356,699.2 879.9,699.2 879.9,523.5</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">27</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">27</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Successful Message" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_12" Text="[&quot;The Robot has processed all available cases&quot;+environment.NewLine+&quot;Please check case logs for any business exceptions found&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MessageBox>
                  </Transition.Action>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="mailCurrentEmail is Nothing AND exeSystemException is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                  </Transition.Condition>
                </Transition>
                <Transition DisplayName="Process" sap:VirtualizedContainerService.HintSize="450,830" sap2010:WorkflowViewState.IdRef="Transition_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:PointCollection x:Key="ConnectorLocation">356,643.5 356,673.5 358,673.5 358,772.5</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">27</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">30</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="exeSystemException is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                  </Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID3" DisplayName="Process Case" sap:VirtualizedContainerService.HintSize="1572,5881" sap2010:WorkflowViewState.IdRef="State_12">
                      <State.Entry>
                        <TryCatch DisplayName="Try Process Case" sap:VirtualizedContainerService.HintSize="851,3517" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Process Case" sap:VirtualizedContainerService.HintSize="813,3268" sap2010:WorkflowViewState.IdRef="Sequence_6">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="strAddressCheck" />
                                <Variable x:TypeArguments="x:String" Name="strMatchedAddress" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Set exception to nothing" sap:VirtualizedContainerService.HintSize="771,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Exception">[exeSystemException]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Store Exception" sap:VirtualizedContainerService.HintSize="771,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Exception">[exeBusinessRuleException]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Blank Exception Message" sap:VirtualizedContainerService.HintSize="771,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Init Address Check" sap:VirtualizedContainerService.HintSize="771,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strAddressCheck]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Init Matched Address" sap:VirtualizedContainerService.HintSize="771,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strMatchedAddress]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="771,2174" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[dictPDFsData.Keys]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="key" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Process Case and Log Success" sap:VirtualizedContainerService.HintSize="735,2040" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictData" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Store current dictionary" sap:VirtualizedContainerService.HintSize="693,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictData]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictPDFsData(key)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Process Case" sap:VirtualizedContainerService.HintSize="693,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Sub Flows/Process Case.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="IN_dictConfig">
                                            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" ExpressionText="dictConfig" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="sn:NetworkCredential" x:Key="IN_netSharepointCredential">
                                            <mva:VisualBasicValue x:TypeArguments="sn:NetworkCredential" ExpressionText="credSharepointPassword" />
                                          </InArgument>
                                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="IO_dictData">
                                            <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="dictData" />
                                          </InOutArgument>
                                          <InOutArgument x:TypeArguments="x:String" x:Key="IO_AddressCheck">
                                            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strAddressCheck" />
                                          </InOutArgument>
                                          <InOutArgument x:TypeArguments="x:String" x:Key="IO_previousMatchedAddress">
                                            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strMatchedAddress" />
                                          </InOutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <Assign DisplayName="Reset Repeat Error" sap:VirtualizedContainerService.HintSize="693,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[booRepeatError]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[dictPDFsData(key).ContainsKey(&quot;OCRF R Code&quot;)]" DisplayName="If no RCode" sap:VirtualizedContainerService.HintSize="693,548" sap2010:WorkflowViewState.IdRef="If_16">
                                        <If.Then>
                                          <If Condition="[Regex.IsMatch(dictPDFsData(key)(&quot;OCRF R Code&quot;).Trim, dictPDFsData(key)(&quot;8 R-code.D-code (4)&quot;).Trim &amp; &quot;(?!(\w|\d))&quot;)]" DisplayName="Check Rcode(?!(\w|\d)) Regex Match (OCRF contains R code)" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_9">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Else>
                                              <Sequence DisplayName="Set exception message and category" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="R Code Message Exception Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">["R Code mismatch, form data: " &amp; dictData("8 R-code.D-code (4)") &amp; Environment.NewLine &amp; "OCRF code: " &amp; dictData("OCRF R Code") &amp; Environment.NewLine &amp; "Reference: " &amp; dictData("Ref Number")]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Set Category" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionCategories]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">R-Code Discrepancy</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </If.Then>
                                      </If>
                                      <Switch x:TypeArguments="x:String" DisplayName="Risk Rating Switch" Expression="[dictPDFsData(key)(&quot;Risk Rating&quot;).ToLower.Trim]" sap:VirtualizedContainerService.HintSize="693,694" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                                        <Switch.Default>
                                          <If Condition="[strExceptionMessage &lt;&gt; &quot;&quot;]" DisplayName="If already has message" sap:VirtualizedContainerService.HintSize="653,400" sap2010:WorkflowViewState.IdRef="If_11">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Set message and category" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Risk Rating Exception Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[strExceptionMessage &amp; Environment.NewLine &amp; "Unacceptable Risk Rating: " &amp; dictData("Risk Rating") &amp; Environment.NewLine]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Set Category" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionCategories]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[strExceptionCategories &amp; "," &amp; dictData("Risk Rating").Trim]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Set message and category" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Risk Rating Exception Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">["Unacceptable Risk Rating: " &amp; dictData("Risk Rating") &amp; Environment.NewLine &amp; "Reference: " &amp; dictData("Ref Number")]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Set Category" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionCategories]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[dictData("Risk Rating").Trim]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Switch.Default>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <x:Null x:Key="green" />
                                        <x:Null x:Key="" />
                                        <If x:Key="recovery facility not in ocrf" Condition="[strExceptionMessage &lt;&gt; &quot;&quot;]" DisplayName="If already has message" sap:VirtualizedContainerService.HintSize="653,400" sap2010:WorkflowViewState.IdRef="If_10">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence DisplayName="Set message and category" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Risk Rating Exception Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[strExceptionMessage &amp; Environment.NewLine &amp; "Unacceptable Risk Rating: " &amp; dictData("Risk Rating") &amp; Environment.NewLine]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Set Category" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionCategories]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[strExceptionCategories &amp; "," &amp; dictData("Risk Rating").Trim]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="Set message and category" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Risk Rating Exception Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_51">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">["Unacceptable Risk Rating: " &amp; dictData("Risk Rating") &amp; Environment.NewLine &amp; "Reference: " &amp; dictData("Ref Number")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Set Category" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionCategories]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[dictData("Risk Rating").Trim]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                        <If x:Key="amber" Condition="[strExceptionMessage &lt;&gt; &quot;&quot;]" DisplayName="If already has message" sap:VirtualizedContainerService.HintSize="653,400" sap2010:WorkflowViewState.IdRef="If_18">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence DisplayName="Set message and category" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Risk Rating Exception Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_73">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[strExceptionMessage &amp; Environment.NewLine &amp; "Unacceptable Risk Rating: " &amp; dictData("Risk Rating") &amp; Environment.NewLine]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Set Category" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionCategories]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[strExceptionCategories &amp; "," &amp; dictData("Risk Rating").Trim.ToUpper &amp; " Recovery Facility"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="Set message and category" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Risk Rating Exception Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">["Unacceptable Risk Rating: " &amp; dictData("Risk Rating") &amp; Environment.NewLine &amp; "Reference: " &amp; dictData("Ref Number")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Set Category" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionCategories]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[dictData("Risk Rating").Trim.ToUpper &amp; " Recovery Facility"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                        <If x:Key="red" Condition="[strExceptionMessage &lt;&gt; &quot;&quot;]" DisplayName="If already has message" sap:VirtualizedContainerService.HintSize="653,400" sap2010:WorkflowViewState.IdRef="If_17">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence DisplayName="Set message and category" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Risk Rating Exception Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[strExceptionMessage &amp; Environment.NewLine &amp; "Unacceptable Risk Rating: " &amp; dictData("Risk Rating") &amp; Environment.NewLine]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Set Category" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionCategories]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[strExceptionCategories &amp; "," &amp; dictData("Risk Rating").Trim.ToUpper &amp; " Recovery Facility"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="Set message and category" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Risk Rating Exception Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">["Unacceptable Risk Rating: " &amp; dictData("Risk Rating") &amp; Environment.NewLine &amp; "Reference: " &amp; dictData("Ref Number")]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Set Category" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strExceptionCategories]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[dictData("Risk Rating").Trim.ToUpper &amp; " Recovery Facility"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                        <x:Null x:Key="unknown" />
                                      </Switch>
                                      <If Condition="[dictData(&quot;2 Country&quot;).ToLower.Trim &lt;&gt; dictData(&quot;7 Country&quot;).ToLower.Trim]" DisplayName="If country mismatch" sap:VirtualizedContainerService.HintSize="693,51" sap2010:WorkflowViewState.IdRef="If_13">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <If Condition="[strExceptionMessage &lt;&gt; &quot;&quot;]" DisplayName="If already has message" sap:VirtualizedContainerService.HintSize="653,400" sap2010:WorkflowViewState.IdRef="If_12">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Set message and category" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Country Exception Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[strExceptionMessage &amp;  Environment.NewLine &amp; "Country in box 2 and 7 mismatch; 2 Country: " &amp;  dictData("2 Country") &amp; Environment.NewLine &amp; "7 Country: " &amp; dictData("7 Country")]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Set Category" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionCategories]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[strExceptionCategories &amp; ",Country mismatch"]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Set message and category" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Country Exception Message" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionMessage]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">["Country in box 2 and 7 mismatch; 2 Country: " &amp;  dictData("2 Country") &amp; Environment.NewLine &amp; "7 Country: " &amp; dictData("7 Country") &amp; Environment.NewLine &amp; "Reference: " &amp; dictData("Ref Number")]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Set Category" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strExceptionCategories]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">["Country mismatch"]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </If.Then>
                                      </If>
                                      <If Condition="[strExceptionMessage &lt;&gt; &quot;&quot;]" DisplayName="If message" sap:VirtualizedContainerService.HintSize="693,208" sap2010:WorkflowViewState.IdRef="If_15">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <r:Log_Case___Preset IN_strFailureMessage="{x:Null}" sap2010:Annotation.AnnotationText="With notes" DisplayName="Log Case - Successful" sap:VirtualizedContainerService.HintSize="200,53" IN_dateCaseEndTime="[Now]" IN_dateCaseStartTime="[dateStartTime]" IN_dateCaseTotalTime="[(Now - dateStartTime).ToString]" IN_strCaseID="[strSenderEmailAddress + &quot; &quot; + Environment.NewLine + strReasonForStoppingRobot &amp; environment.NewLine &amp; dictPDFsData(key)(&quot;Ref Number&quot;)]" IN_strFilePath="[strLogFilePath]" IN_strNotes="[strExceptionMessage]" IN_strSuccessful="Success" IN_strUser="[Environment.UserName]" IN_strWorkpackageName="[dictConfig(&quot;Workpackage Name&quot;)]" sap2010:WorkflowViewState.IdRef="Log_Case___Preset_9">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </r:Log_Case___Preset>
                                        </If.Then>
                                        <If.Else>
                                          <r:Log_Case___Preset DisplayName="Log Case - Successful" sap:VirtualizedContainerService.HintSize="200,22" IN_dateCaseEndTime="[Now]" IN_dateCaseStartTime="[dateStartTime]" IN_dateCaseTotalTime="[(Now - dateStartTime).ToString]" IN_strCaseID="[dictPDFsData(key)(&quot;Ref Number&quot;)]" IN_strFailureMessage="N/A" IN_strFilePath="[strLogFilePath]" IN_strNotes="[strSenderEmailAddress + &quot; &quot; + Environment.NewLine + strReasonForStoppingRobot]" IN_strSuccessful="Success" IN_strUser="[Environment.UserName]" IN_strWorkpackageName="[dictConfig(&quot;Workpackage Name&quot;)]" sap2010:WorkflowViewState.IdRef="Log_Case___Preset_10" />
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                              <If Condition="[strExceptionMessage &lt;&gt; &quot;&quot;]" DisplayName="If message" sap:VirtualizedContainerService.HintSize="771,462" sap2010:WorkflowViewState.IdRef="If_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Create and throw" sap:VirtualizedContainerService.HintSize="304,314" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="s:Exception" Name="BusinessRuleException" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Init BRE" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Exception">[BusinessRuleException]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Exception">[new BusinessRuleException(strExceptionMessage)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Add categories" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[BusinessRuleException.Data("Categories")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Object">[strExceptionCategories]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Throw DisplayName="Throw BRE" Exception="[BusinessRuleException]" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="817,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Store exception and log fail" sap:VirtualizedContainerService.HintSize="304,211" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Store Exception" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[exeSystemException]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <r:Log_Case___Preset IN_strCaseID="{x:Null}" DisplayName="Log Case - Exception" sap:VirtualizedContainerService.HintSize="262,22" IN_dateCaseEndTime="[Now]" IN_dateCaseStartTime="[dateStartTime]" IN_dateCaseTotalTime="[(Now - dateStartTime).ToString]" IN_strFailureMessage="[exeSystemException.Message]" IN_strFilePath="[strLogFilePath]" IN_strNotes="[mailCurrentEmail.Subject]" IN_strSuccessful="Application Exception" IN_strUser="[Environment.UserName]" IN_strWorkpackageName="[dictConfig(&quot;Workpackage Name&quot;)]" sap2010:WorkflowViewState.IdRef="Log_Case___Preset_3" />
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                            <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="817,21" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Store Business exception and log fail" sap:VirtualizedContainerService.HintSize="376,399" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Store Exception" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[exeBusinessRuleException]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[dictConfig(&quot;Email Account&quot;)]" Body="[exeBusinessRuleException.Message]" DisplayName="Send Outlook Mail Message - Outlook" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="Robot Annex VII Process action required" To="[dictConfig(&quot;Exception Recipient&quot;)]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String">[strAttachmentDirectory &amp; "currentmail.eml"]</InArgument>
                                        <InArgument x:TypeArguments="x:String">[Directory.GetFiles(string.format(dictConfig("OCRF File Path"), Environment.UserName))(0)]</InArgument>
                                      </scg:List>
                                    </ui:SendOutlookMail.Files>
                                  </ui:SendOutlookMail>
                                  <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delete_4" Path="[Directory.GetFiles(string.format(dictConfig(&quot;OCRF File Path&quot;), Environment.UserName))(0)]" />
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">300,772.5</av:Point>
                          <av:Size x:Key="ShapeSize">145,83</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">110.64342629482076</x:Double>
                          <x:Double x:Key="StateContainerHeight">47</x:Double>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Exit>
                        <Sequence DisplayName="Move Mail, Reset Variables &amp; Clear attachments" sap:VirtualizedContainerService.HintSize="1526,2060" sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="si:DirectoryInfo" Name="dirAttachmentFolder" />
                            <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listMail" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1484,476" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                            <TryCatch.Try>
                              <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope" sap:VirtualizedContainerService.HintSize="434,245" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_5" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SecurePassword="[credSharepointPassword.SecurePassword]" SharePointInstanceType="Online" URL="[dictConfig(&quot;Sharepoint URL&quot;)]" UserName="[credSharepointPassword.UserName]">
                                <usa:SharepointApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="us:SharePointContextInfo">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
                                    </ActivityAction.Argument>
                                    <usal:UploadFile AttachmentsAction="{x:Null}" PropertiesToAdd="{x:Null}" RelativeUrlHintText="{x:Null}" AllowOperationsOnASPXFiles="False" AllowOverwrite="True" CheckInFileAfterCreation="True" CheckOutFileBeforeOverwrite="False" ChooseFile="True" DisplayName="Upload file" sap:VirtualizedContainerService.HintSize="273,104" sap2010:WorkflowViewState.IdRef="UploadFile_6" LocalPath="[strAttachmentDirectory &amp; &quot;currentmail.eml&quot;]" LocalPathHintText="The current local path of the file" RelativeUrl="[string.format(dictConfig(&quot;Mail Save Path&quot;), Regex.Replace(Regex.Match(mailCurrentEmail.Sender.Address, &quot;(?&lt;=@).*?(?=\.)&quot;).Value, &quot;(#|%|\*|:|&lt;|&gt;|\?|\/|\|)&quot;,&quot;&quot;)) &amp; Convert.ToDateTime(mailCurrentEmail.Headers(&quot;Date&quot;)).ToString(&quot;yyyy.MM.dd&quot;) &amp; &quot; - &quot; &amp; Regex.Replace(mailCurrentEmail.Subject, &quot;(#|%|\*|:|&lt;|&gt;|\?|\/|\|)&quot;,&quot;&quot;) &amp; &quot;.eml&quot;]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                                  </ActivityAction>
                                </usa:SharepointApplicationScope.Body>
                              </usa:SharepointApplicationScope>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="440,314" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope - " sap:VirtualizedContainerService.HintSize="434,245" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_6" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SecurePassword="[credSharepointPassword.SecurePassword]" SharePointInstanceType="Online" URL="[dictConfig(&quot;Sharepoint URL&quot;)]" UserName="[credSharepointPassword.UserName]">
                                    <usa:SharepointApplicationScope.Body>
                                      <ActivityAction x:TypeArguments="us:SharePointContextInfo">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
                                        </ActivityAction.Argument>
                                        <usal:UploadFile AttachmentsAction="{x:Null}" PropertiesToAdd="{x:Null}" RelativeUrlHintText="{x:Null}" AllowOperationsOnASPXFiles="False" AllowOverwrite="True" CheckInFileAfterCreation="True" CheckOutFileBeforeOverwrite="False" ChooseFile="True" DisplayName="Upload mail - default" sap:VirtualizedContainerService.HintSize="273,104" sap2010:WorkflowViewState.IdRef="UploadFile_7" LocalPath="[strAttachmentDirectory &amp; &quot;currentmail.eml&quot;]" LocalPathHintText="The current local path of the file" RelativeUrl="[string.format(dictConfig(&quot;Mail Save Path&quot;), &quot;0. Default folder&quot;) &amp; Regex.Replace(Regex.Match(mailCurrentEmail.Sender.Address, &quot;(?&lt;=@).*?(?=\.)&quot;).Value, &quot;(#|%|\*|:|&lt;|&gt;|\?|\/|\|)&quot;,&quot;&quot;) &amp; &quot; &quot; &amp; Convert.ToDateTime(mailCurrentEmail.Headers(&quot;Date&quot;)).ToString(&quot;yyyy.MM.dd&quot;) &amp; &quot; - &quot; &amp; Regex.Replace(mailCurrentEmail.Subject, &quot;(#|%|\*|:|&lt;|&gt;|\?|\/|\|)&quot;,&quot;&quot;) &amp; &quot;.eml&quot;]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                                      </ActivityAction>
                                    </usa:SharepointApplicationScope.Body>
                                  </usa:SharepointApplicationScope>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <If Condition="[exeSystemException is Nothing And exeBusinessRuleException is Nothing]" DisplayName="If no error" sap:VirtualizedContainerService.HintSize="1484,1118" sap2010:WorkflowViewState.IdRef="If_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence DisplayName="Success" sap:VirtualizedContainerService.HintSize="376,171" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:DeleteOutlookMailMessage DisplayName="Delete Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="DeleteOutlookMailMessage_1" MailMessage="[mailCurrentEmail]" PermanentlyDelete="False" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <If Condition="[exeSystemException isNot Nothing]" DisplayName="If system exception" sap:VirtualizedContainerService.HintSize="1063,970" sap2010:WorkflowViewState.IdRef="If_8">
                                <If.Then>
                                  <Sequence DisplayName="Mark as unread - app exception" sap:VirtualizedContainerService.HintSize="504,564" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MarkOutlookMailAsRead DisplayName="Mark Outlook Mail As Read/Unread" sap:VirtualizedContainerService.HintSize="462,142" sap2010:WorkflowViewState.IdRef="MarkOutlookMailAsRead_1" MailMessage="[mailCurrentEmail]" MarkAs="Unread" />
                                    <ui:SetOutlookMailCategories Categories="[{&quot;Robot experienced application exception at: &quot; &amp; exeSystemException.Source}]" DisplayName="Set Outlook Mail Categories" sap:VirtualizedContainerService.HintSize="462,132" sap2010:WorkflowViewState.IdRef="SetOutlookMailCategories_2" MailMessage="[mailCurrentEmail]" />
                                    <ui:MoveOutlookMessage Account="[dictConfig(&quot;Email Account&quot;).ToString]" sap2010:Annotation.AnnotationText="Exception" DisplayName="Move Outlook Mail Message" sap:VirtualizedContainerService.HintSize="462,118" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_3" MailFolder="[dictConfig(&quot;Email App Exception Folder&quot;)]" MailMessage="[mailCurrentEmail]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:MoveOutlookMessage>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Set categories and move" sap:VirtualizedContainerService.HintSize="514,822" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch sap2010:Annotation.AnnotationText="Catch for null reference to support stops at pausepoints" DisplayName="Try Catch " sap:VirtualizedContainerService.HintSize="472,390" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch.Try>
                                        <ui:SetOutlookMailCategories Categories="[exeBusinessRuleException.Data(&quot;Categories&quot;).ToString.Split({&quot;,&quot;}, nothing)]" DisplayName="Set Outlook Mail Categories" sap:VirtualizedContainerService.HintSize="434,132" sap2010:WorkflowViewState.IdRef="SetOutlookMailCategories_1" MailMessage="[mailCurrentEmail]" />
                                      </TryCatch.Try>
                                      <TryCatch.Catches>
                                        <Catch x:TypeArguments="s:NullReferenceException" sap:VirtualizedContainerService.HintSize="438,21" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ActivityAction x:TypeArguments="s:NullReferenceException">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
                                            </ActivityAction.Argument>
                                          </ActivityAction>
                                        </Catch>
                                      </TryCatch.Catches>
                                    </TryCatch>
                                    <ui:MarkOutlookMailAsRead DisplayName="Mark Outlook Mail As Read/Unread" sap:VirtualizedContainerService.HintSize="472,142" sap2010:WorkflowViewState.IdRef="MarkOutlookMailAsRead_2" MailMessage="[mailCurrentEmail]" MarkAs="Unread" />
                                    <ui:MoveOutlookMessage Account="[dictConfig(&quot;Email Account&quot;).ToString]" sap2010:Annotation.AnnotationText="BRE Exception" DisplayName="Move Outlook Mail Message" sap:VirtualizedContainerService.HintSize="472,118" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_4" MailFolder="[dictConfig(&quot;Email Exception Folder&quot;)]" MailMessage="[mailCurrentEmail]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:MoveOutlookMessage>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                          <Assign DisplayName="Store Folder info" sap:VirtualizedContainerService.HintSize="1480,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                            <Assign.To>
                              <OutArgument x:TypeArguments="si:DirectoryInfo">[dirAttachmentFolder]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="si:DirectoryInfo">[New DirectoryInfo(strAttachmentDirectory)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="si:FileInfo" CurrentIndex="{x:Null}" DisplayName="Delete each file" sap:VirtualizedContainerService.HintSize="1480,194" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[dirAttachmentFolder.GetFiles]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="si:FileInfo">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="si:FileInfo" Name="file" />
                                </ActivityAction.Argument>
                                <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[file.FullName]" />
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                        </Sequence>
                      </State.Exit>
                      <State.Transitions>
                        <Transition DisplayName="Next Case" sap:VirtualizedContainerService.HintSize="652,1407" sap2010:WorkflowViewState.IdRef="Transition_17">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:PointCollection x:Key="ConnectorLocation">358,855.5 358,885.5 270,885.5 270,594.9 300,594.9</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">31</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">29</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID1</x:Reference>
                          </Transition.To>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="jsonOutput(&quot;processType&quot;).ToString = &quot;batch&quot;" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                          </Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Single run" sap:VirtualizedContainerService.HintSize="450,1093" sap2010:WorkflowViewState.IdRef="Transition_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">358,855.5 358,885.5 933.5,885.5 933.5,523.5</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">31</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">59</x:Int32>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <ui:MessageBox ChosenButton="{x:Null}" Buttons="Ok" Caption="Email Processing Complete" DisplayName="Email Processing Complete" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_11" Text="[&quot;The robot has finished running the current case.&quot;]" TopMost="True" />
                          </Transition.Action>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="jsonOutput(&quot;processType&quot;).ToString = &quot;single&quot;" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                          </Transition.Condition>
                        </Transition>
                        <Transition DisplayName="Application Exception" sap:VirtualizedContainerService.HintSize="707,1638" sap2010:WorkflowViewState.IdRef="Transition_18">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:PointCollection x:Key="ConnectorLocation">358,855.5 358,885 174.5,885 174.5,574.65 300,574.65</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">31</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">9</x:Int32>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID1</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <Sequence DisplayName="Kill apps" sap:VirtualizedContainerService.HintSize="604,655" sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process - Adobe Reader" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="AcroRd32.exe" />
                              <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process - Adobe" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="AcroRd.exe" />
                              <Throw Exception="[exeSystemException]" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="562,377" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="526,299" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[booRepeatError]" DisplayName="If Repeat Error" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_7">
                                      <If.Else>
                                        <Assign DisplayName="Repeat Error" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[booRepeatError]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                            </Sequence>
                          </Transition.Action>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="exeSystemException isNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                          </Transition.Condition>
                        </Transition>
                      </State.Transitions>
                      <State.Variables>
                        <Variable x:TypeArguments="x:String" Name="strExceptionMessage" />
                        <Variable x:TypeArguments="x:String" Name="strExceptionCategories" />
                      </State.Variables>
                    </State>
                  </Transition.To>
                </Transition>
                <Transition DisplayName="Exception" sap:VirtualizedContainerService.HintSize="479,1314" sap2010:WorkflowViewState.IdRef="Transition_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:PointCollection x:Key="ConnectorLocation">356,643.5 356,673.5 853.1,673.5 853.1,523.5</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">27</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">11</x:Int32>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Action>
                    <Sequence DisplayName="Log Case and notify user" sap:VirtualizedContainerService.HintSize="376,337" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <r:Log_Case___Preset IN_strNotes="{x:Null}" DisplayName="Log Case - Preset" sap:VirtualizedContainerService.HintSize="334,22" IN_dateCaseEndTime="[Now]" IN_dateCaseStartTime="[dateStartTime]" IN_dateCaseTotalTime="[(Now - dateStartTime).ToString]" IN_strCaseID="N/A" IN_strFailureMessage="[exeSystemException.Message]" IN_strFilePath="[strLogFilePath]" IN_strSuccessful="Exception" IN_strUser="[Environment.UserName]" IN_strWorkpackageName="[dictConfig(&quot;Workpackage Name&quot;)]" sap2010:WorkflowViewState.IdRef="Log_Case___Preset_6" />
                      <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process Adobe 32" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="AcroRd32" />
                      <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process Acrobat" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="KillProcess_4" ProcessName="Acrobat" />
                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Exception Message" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_14" Text="[&quot;The Robot has failed to read the attachment, please check the email has been moved to the &quot; &amp; dictConfig(&quot;Email Exception Folder&quot;).ToString &amp; &quot;folder and check logs for more information.&quot;]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MessageBox>
                    </Sequence>
                  </Transition.Action>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="exeSystemException isNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_3" />
                  </Transition.Condition>
                </Transition>
              </State.Transitions>
              <State.Variables>
                <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listMessage" />
              </State.Variables>
            </State>
          </Transition.To>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID0</x:Reference>
    <State x:Name="__ReferenceID4" DisplayName="Read Config - Get Assets" sap:VirtualizedContainerService.HintSize="195,86" sap2010:WorkflowViewState.IdRef="State_5">
      <State.Entry>
        <TryCatch DisplayName="Try Read Config Reader" sap:VirtualizedContainerService.HintSize="438,506" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Try>
            <Sequence DisplayName="Retry Point: Read Config" sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strText" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Config Reader" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Sub Flows/Config Reader.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="IN_strConfigPath">Documents\Config\config.xlsx</InArgument>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="OUT_dictConfig">[dictConfig]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Assign DisplayName="Set exception to nothing" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[exeSystemException]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Assign DisplayName="Store Exception" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[exeSystemException]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                  </Assign.Value>
                </Assign>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">310.5,119.5</av:Point>
          <av:Size x:Key="ShapeSize">195,86</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">161</x:Double>
          <x:Double x:Key="StateContainerHeight">50.080000000000013</x:Double>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Exit>
        <Sequence DisplayName="Create log file" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_21">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign strLogFilePath" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_38">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strLogFilePath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Format(dictConfig("Local Log File Path"),Environment.UserName,DateTime.Now.ToString("dd.MM.yyyy"))]</InArgument>
            </Assign.Value>
          </Assign>
          <r:Create_Log_File___Preset DisplayName="Create Log File - Preset" sap:VirtualizedContainerService.HintSize="262,22" IN_strFilePath="[strLogFilePath]" sap2010:WorkflowViewState.IdRef="Create_Log_File___Preset_2" />
        </Sequence>
      </State.Exit>
      <State.Transitions>
        <Transition DisplayName="Exception" sap:VirtualizedContainerService.HintSize="450,796" sap2010:WorkflowViewState.IdRef="Transition_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:PointCollection x:Key="ConnectorLocation">369,204.5 369,234.5 920.1,234.5 920.1,429.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">50</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID0</x:Reference>
          </Transition.To>
          <Transition.Action>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Exception Message" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_10" Text="[&quot;The Robot has failed to read the config, source: &quot; &amp; exeSystemException.Source &amp; &quot;, message: &quot; &amp; exeSystemException.Message]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MessageBox>
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="exeSystemException isNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="Continue" sap:VirtualizedContainerService.HintSize="450,796" sap2010:WorkflowViewState.IdRef="Transition_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">369,204.5 369,234.5 370,234.5 370,346.5</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID2</x:Reference>
          </Transition.To>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="exeSystemException is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
          </Transition.Condition>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="s:Exception" Default="[Nothing]" Name="exeSystemException" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" Name="dictConfig" />
      <Variable x:TypeArguments="x:String" Name="strLogFilePath" />
      <Variable x:TypeArguments="s:DateTime" Name="dateStartTime" />
      <Variable x:TypeArguments="x:String" Name="strSenderEmailAddress" />
      <Variable x:TypeArguments="x:String" Name="strReasonForStoppingRobot" />
      <Variable x:TypeArguments="njl:JObject" Name="jsonOutput" />
      <Variable x:TypeArguments="x:String" Name="strAttachmentDirectory" />
      <Variable x:TypeArguments="snm:MailMessage" Name="mailCurrentEmail" />
      <Variable x:TypeArguments="s:Exception" Name="exeBusinessRuleException" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))" Name="dictPDFsData" />
      <Variable x:TypeArguments="sn:NetworkCredential" Name="credSharepointPassword" />
      <Variable x:TypeArguments="x:Boolean" Name="booRepeatError" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>