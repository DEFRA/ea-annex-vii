<Activity mc:Ignorable="sap sap2010" x:Class="get_mail_and_Save_Attachments" this:get_mail_and_Save_Attachments.IN_strAttachmentFolder="C:\Users\Jsavory\Documents\GitHub\ea-annex-vii\Documents\Attachments\" this:get_mail_and_Save_Attachments.IN_strInProgressFolder="Inbox\Annex VII\In Progress" this:get_mail_and_Save_Attachments.IN_strInboxFolder="Inbox\Annex VII" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:sma="clr-namespace:System.Management.Automation;assembly=System.Management.Automation" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:sri="clr-namespace:System.Runtime.InteropServices;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upap="clr-namespace:UiPath.PDF.Activities.PDF;assembly=UiPath.PDF.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="IN_strEmailAccount" Type="InArgument(x:String)" />
    <x:Property Name="IN_strAttachmentFolder" Type="InArgument(x:String)" />
    <x:Property Name="IN_strInProgressFolder" Type="InArgument(x:String)" />
    <x:Property Name="IN_strInboxFolder" Type="InArgument(x:String)" />
    <x:Property Name="OUT_mailCurrentEmail" Type="OutArgument(snm:MailMessage)" />
    <x:Property Name="OUT_dictData" Type="OutArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, x:String)))" />
    <x:Property Name="IN_dictConfig" Type="InArgument(scg:Dictionary(x:String, ui:GenericValue))" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>2715,11062</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="52">
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.Exchange.WebServices.Data</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Management.Automation</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="62">
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Get mail and read attachment data" sap:VirtualizedContainerService.HintSize="1118,10997" sap2010:WorkflowViewState.IdRef="Sequence_7">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strPDFText" />
      <Variable x:TypeArguments="x:Boolean" Name="booKeyExists" />
      <Variable x:TypeArguments="x:String" Name="strCurrentBox" />
      <Variable x:TypeArguments="si:FileInfo" Name="fileCurrentFile" />
      <Variable x:TypeArguments="x:Int32" Name="intCurrentPage" />
      <Variable x:TypeArguments="x:String" Name="strText" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Init Output Dictionary" sap:VirtualizedContainerService.HintSize="1076,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))">[OUT_dictData]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))">[new Dictionary(of string, Dictionary(of string, string))]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="Get mail and Save Attachments" sap:VirtualizedContainerService.HintSize="1076,692" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:ICollection(x:String)" Name="listAttachments" />
        <Variable x:TypeArguments="x:String" Name="strAttName" />
        <Variable x:TypeArguments="snm:MailMessage" Name="msgInProgressMsg" />
        <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listInProgressMsg" />
        <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listMessage" />
        <Variable x:TypeArguments="x:String" Name="strRequestData" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="[IN_strEmailAccount]" sap2010:Annotation.AnnotationText="From inbox" DisplayName="Retry Point: Get Mail " Filter="@SQL=urn:schemas:httpmail:hasattachment=true" GetAttachements="False" sap:VirtualizedContainerService.HintSize="334,53" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_4" MailFolder="[IN_strInboxFolder]" MarkAsRead="False" Messages="[listMessage]" OnlyUnreadMessages="False" OrderByDate="OldestFirst" Top="100">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetOutlookMailMessages>
      <Assign DisplayName="Order by date received" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">[listMessage]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(snm:MailMessage)">[listMessage.OrderBy(function(m) m.Headers("DateReceived")).ToList]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:MoveOutlookMessage Account="[IN_strEmailAccount]" DisplayName="Move Last Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_4" MailFolder="[IN_strInProgressFolder]" MailMessage="[listMessage.Last]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MoveOutlookMessage>
      <ui:GetOutlookMailMessages Filter="{x:Null}" FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="[IN_strEmailAccount]" sap2010:Annotation.AnnotationText="From in progress" DisplayName="Retry Point: Get Mail" GetAttachements="False" sap:VirtualizedContainerService.HintSize="334,53" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_5" MailFolder="[IN_strInProgressFolder]" MarkAsRead="False" Messages="[listMessage]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetOutlookMailMessages>
      <Assign DisplayName="Store current mail" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="snm:MailMessage">[OUT_mailCurrentEmail]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="snm:MailMessage">[listMessage.Last]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Save Attachments" Filter=".*\.pdf" FolderPath="[IN_strAttachmentFolder]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_5" Message="[OUT_mailCurrentEmail]" OverwriteExisting="False">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:SaveMailAttachments>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="some clients will email in multiple annex forms in a single pdf&#xA;test data provided showed it may be multiple files with multiple annex forms&#xA;This code will look at each file&#xA;do nothing if there is only 1 page&#xA;split and delete parent if more than 2 pages" DisplayName="Split multi PDF file" sap:VirtualizedContainerService.HintSize="1076,704" sap2010:WorkflowViewState.IdRef="Sequence_53">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="si:FileInfo" CurrentIndex="[intCurrentPage]" DisplayName="For Each File" sap:VirtualizedContainerService.HintSize="575,525" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[new DirectoryInfo(IN_strAttachmentFolder).GetFiles().OrderBy(function(fi) fi.CreationTime)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="si:FileInfo">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="file" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Split File" sap:VirtualizedContainerService.HintSize="539,391" sap2010:WorkflowViewState.IdRef="Sequence_52">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="intPageCount" />
                <Variable x:TypeArguments="x:Int32" Name="intLoop" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <upap:GetPDFPageCount DisplayName="Get PDF Page Count" FileName="[file.FullName]" sap:VirtualizedContainerService.HintSize="497,59" sap2010:WorkflowViewState.IdRef="GetPDFPageCount_1" PageCount="[intPageCount]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </upap:GetPDFPageCount>
              <Switch x:TypeArguments="x:Boolean" DisplayName="Switch multi page" Expression="[intPageCount &gt; 1]" sap:VirtualizedContainerService.HintSize="497,138" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                <Switch.Default>
                  <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                </Switch.Default>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence x:Key="True" DisplayName="Extract Pages" sap:VirtualizedContainerService.HintSize="454,676" sap2010:WorkflowViewState.IdRef="Sequence_51">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign - reset integer" sap:VirtualizedContainerService.HintSize="412,60" sap2010:WorkflowViewState.IdRef="Assign_164">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intLoop]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InterruptibleWhile DisplayName="While - page cycle " sap:VirtualizedContainerService.HintSize="412,484" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                    <ui:InterruptibleWhile.Body>
                      <Sequence DisplayName="find and extract page" sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_50">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_165">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intLoop]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intLoop + 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <upap:ExtractPDFPageRange DisplayName="Extract PDF Page Range" FileName="[file.FullName]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExtractPDFPageRange_1" OutputFileName="[regex.Replace(file.FullName, &quot;.pdf&quot;, &quot; Page &quot; &amp; intLoop &amp; &quot;.pdf&quot;)]" Range="[intLoop.ToString]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </upap:ExtractPDFPageRange>
                      </Sequence>
                    </ui:InterruptibleWhile.Body>
                    <ui:InterruptibleWhile.Condition>
                      <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="intLoop &lt; intPageCount" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                    </ui:InterruptibleWhile.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InterruptibleWhile>
                </Sequence>
              </Switch>
              <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete parent path" sap:VirtualizedContainerService.HintSize="497,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[file.FullName]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
    </Sequence>
    <ui:ForEach x:TypeArguments="si:FileInfo" CurrentIndex="[intCurrentPage]" DisplayName="For Each File" sap:VirtualizedContainerService.HintSize="1076,9329" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[new DirectoryInfo(IN_strAttachmentFolder).GetFiles().OrderBy(function(fi) fi.CreationTime)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="si:FileInfo">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="file" />
          </ActivityAction.Argument>
          <TryCatch DisplayName="Try Extract Data" sap:VirtualizedContainerService.HintSize="1040,9195" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence DisplayName="Extract data" sap:VirtualizedContainerService.HintSize="1002,8924" sap2010:WorkflowViewState.IdRef="Sequence_27">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))" Name="dicResults" />
                  <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="ienEleDescendants" />
                  <Variable x:TypeArguments="x:String" Name="strFullText" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Get oldest file" sap:VirtualizedContainerService.HintSize="960,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="si:FileInfo">[fileCurrentFile]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="si:FileInfo">[file]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" CommandText="[&quot;$Command = '&quot; &amp; IN_dictConfig(&quot;Adobe File Path&quot;).ToString &amp; &quot;'&quot; &amp; Environment.NewLine &amp; &quot;$Parms = '&quot; &amp; fileCurrentFile.FullName &amp; &quot;'&quot; &amp; Environment.NewLine &amp; &quot;&amp; &quot;&quot;$Command&quot;&quot; $Parms&quot;]" DisplayName="Invoke Power Shell - Open document" sap:VirtualizedContainerService.HintSize="960,59" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokePowerShell>
                <ui:GetFullText IgnoreHidden="{x:Null}" DisplayName="Get Full Text 'document'" sap:VirtualizedContainerService.HintSize="960,106" sap2010:WorkflowViewState.IdRef="GetFullText_11">
                  <ui:GetFullText.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e1e0c956-f91e-435a-80f2-9c95951714d8" InformativeScreenshot="89559cca5fd7c4bbb9d76a38f5f127cb" Selector="&lt;wnd app='acrord*.exe' cls='AcrobatSDIWindow' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='client' /&gt;" WaitForReady="COMPLETE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:GetFullText.Target>
                  <ui:GetFullText.Text>
                    <OutArgument x:TypeArguments="x:String">[strFullText]</OutArgument>
                  </ui:GetFullText.Text>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:GetFullText>
                <Sequence DisplayName="Regex for values" sap:VirtualizedContainerService.HintSize="960,7110" sap2010:WorkflowViewState.IdRef="Sequence_30">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="strBoxText" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Create Page" sap:VirtualizedContainerService.HintSize="918,60" sap2010:WorkflowViewState.IdRef="Assign_166">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[OUT_dictData("Page " &amp; intCurrentPage + 1)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(of string, string)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Store Ref" sap:VirtualizedContainerService.HintSize="918,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("Ref Number")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=Ref:).*?(?=1\.)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Sequence DisplayName="Box 1" sap:VirtualizedContainerService.HintSize="918,66" sap2010:WorkflowViewState.IdRef="Sequence_29">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 1" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=1\. Person who arranges the shipment ).*?(?=2\. Import\/consignee)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Name" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("1 Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Name:).*?(?=Address:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[OUT_dictData(&quot;Page &quot; &amp; intCurrentPage + 1)(&quot;1 Name&quot;).Trim = &quot;&quot;]" DisplayName="If Name is blank" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Throw DisplayName="Throw Data Exception" Exception="[new InvalidDataException(&quot;Box 1 Name is not formatted correctly.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                      </If.Then>
                    </If>
                    <Assign DisplayName="Store Address" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("1 Address")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Address:).*(?=Contact person:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Contact person" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("1 Contact person")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Contact person:).*?(?=Tel:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Tel" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("1 Tel.")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Tel)\.?:(?'match'.*?$)(?=E-mail)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Groups("match").Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store E-mail" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("1 E-mail")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=E-mail:).*$", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 2" sap:VirtualizedContainerService.HintSize="918,66" sap2010:WorkflowViewState.IdRef="Sequence_31">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box2" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=2\. Import\/consignee).*?(?=3\. Actual number of Bales)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Name" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("2 Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Name:).*?(?=Address:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Address" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("2 Address")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Address:).*?(?=Country:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Country" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_149">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("2 Country")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Country:).*?(?=Contact person:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[OUT_dictData(&quot;Page &quot; &amp; intCurrentPage + 1)(&quot;2 Country&quot;).Trim = &quot;&quot;]" DisplayName="If Country is blank" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Throw DisplayName="Throw Data Exception" Exception="[new InvalidDataException(&quot;Box 2 Country is not formatted correctly.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                      </If.Then>
                    </If>
                    <Assign DisplayName="Store Contact Person" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_51">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("2 Contact Person")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Contact person:).*?(?=Tel:)", RegexOptions.Singleline or RegexOptions.IgnoreCase or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Tel" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("2 Tel")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Tel)\.?:(?'match'.*?$)(?=E)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Groups("match").Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Email" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("2 Email")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=mail:).*?$", RegexOptions.Singleline).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 3" sap:VirtualizedContainerService.HintSize="918,66" sap2010:WorkflowViewState.IdRef="Sequence_32">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 3" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=3\. Actual).*?(?=4\. Actual)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Bales" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("3 Actual number of Bales")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=number of Bales:).*?(?=Weight)").Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <TryCatch DisplayName="Catch invalid cast" sap:VirtualizedContainerService.HintSize="438,287" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <Assign DisplayName="Store Tonnes" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("3 Tonnes (Mg)")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[(CInt(Regex.Match(strBoxText, "(?&lt;=Weight \(kg\):).*?(?=Container)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim) / 1000).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:InvalidCastException" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:InvalidCastException">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:InvalidCastException" Name="exception" />
                            </ActivityAction.Argument>
                            <Assign DisplayName="Store Tonnes - not specified" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_148">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("3 Tonnes (Mg)")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                    <Assign DisplayName="Store Container No." sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("3 Container No.")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Container No\.:).*?(?=Seal No\.:)").Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Seal No." sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("3 Seal No.")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Seal No:).*?(?=4\.)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 4" sap:VirtualizedContainerService.HintSize="918,66" sap2010:WorkflowViewState.IdRef="Sequence_33">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Date" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("4 Actual date of shipment")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=4\. Actual date of shipment:).*?(?=5\.)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Replace(".","/")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 5a" sap:VirtualizedContainerService.HintSize="918,66" sap2010:WorkflowViewState.IdRef="Sequence_34">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 5a" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=5\.\(a\) 1st carrier ).*?(?=5\.\(b\))", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(a) Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Name:).*?(?=Address:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Address" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(a) Address")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Address:).*(?=Contact person:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Contact person" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_73">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(a) Contact person")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Contact person:).*?(?=Tel:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Tel" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(a) Tel.")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Tel)\.?:(?'match'.*?$)(?=E-mail)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Groups("match").Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store E-mail" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(a) E-mail")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=E-mail:).*?(?=Means of transport:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Means of transport" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(a) Means of transport")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Means of transport:).*?(?=Date of transfer:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Date of transfer" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(a) Date of transfer")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Date of transfer:).*?(?=Signature:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim.Replace(".","/")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 5b" sap:VirtualizedContainerService.HintSize="918,66" sap2010:WorkflowViewState.IdRef="Sequence_35">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 5b" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=5\.\(b\) 2nd carrier ).*?(?=5\.\(c\))", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_79">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(b) Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Name:).*?(?=Address:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Address" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_80">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(b) Address")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Address:).*(?=Contact person:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Contact person" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_81">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(b) Contact person")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Contact person:).*?(?=Tel:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Tel" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_82">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(b) Tel.")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Tel)\.?:(?'match'.*?$)(?=E-mail)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Groups("match").Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store E-mail" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_83">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(b) E-mail")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=E-mail:).*?(?=Means of transport)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Means of transport" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_135">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(b) Means of transport")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Means of transport:).*?(?=Date of transfer:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Date of transfer" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_136">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(b) Date of transfer")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Date of transfer:).*?(?=Signature:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim.Replace(".","/")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 5c" sap:VirtualizedContainerService.HintSize="918,66" sap2010:WorkflowViewState.IdRef="Sequence_36">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 5c" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=5\.\(c\) 3rd carrier ).*?(?=6\.)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_137">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(c) Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Name:).*?(?=Address:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Address" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_138">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(c) Address")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Address:).*(?=Contact person:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Contact person" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_139">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(c) Contact person")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Contact person:).*?(?=Tel:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Tel" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_140">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(c) Tel.")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Tel)\.?:(?'match'.*?$)(?=E-mail)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Groups("match").Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store E-mail" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_141">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(c) E-mail")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=E-mail:).*?(?=Means of transport)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Means of transport" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_142">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(c) Means of transport")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Means of transport:).*?(?=Date of transfer:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Date of transfer" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_143">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("5.(c) Date of transfer")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Date of transfer:).*?(?=Signature:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim.Replace(".","/")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 6" sap:VirtualizedContainerService.HintSize="918,900" sap2010:WorkflowViewState.IdRef="Sequence_37">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 6" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=6\. Waste generator ).*?(?=8\.)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Name" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("6 Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Name:).*?(?=Address:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[OUT_dictData(&quot;Page &quot; &amp; intCurrentPage + 1)(&quot;6 Name&quot;).Trim = &quot;&quot;]" DisplayName="If Name is blank" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_24">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Throw DisplayName="Throw Data Exception" Exception="[new InvalidDataException(&quot;Box 6 Name is not formatted correctly.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
                      </If.Then>
                    </If>
                    <Assign DisplayName="Store Address" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_96">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("6 Address")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Address:).*(?=Contact person:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Contact person" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_97">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("6 Contact person")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Contact person:).*?(?=Tel:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Tel" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_98">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("6 Tel")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Tel)\.?:(?'match'.*?$)(?=E-mail)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Groups("match").Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store E-mail" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_99">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("6 E-mail")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=E-mail:).*?$", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 7" sap:VirtualizedContainerService.HintSize="918,1396" sap2010:WorkflowViewState.IdRef="Sequence_38">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 7" sap:VirtualizedContainerService.HintSize="876,60" sap2010:WorkflowViewState.IdRef="Assign_100">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=7\. Recovery).*?(?=10\.)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[Regex.Match(strBoxText, &quot;(?&lt;=facility :).*?(?=Laboratory :)&quot;, RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim.ToLower.StartsWith(&quot;y&quot;)]" DisplayName="If Recovery Facility" sap:VirtualizedContainerService.HintSize="876,356" sap2010:WorkflowViewState.IdRef="If_20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign DisplayName="Store Facility" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_132">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("7 Recovery facility")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Recovery Facility</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <If Condition="[Regex.Match(strBoxText, &quot;(?&lt;=Laboratory :).*?(?=Name:)&quot;, RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim.ToLower.StartsWith(&quot;y&quot;)]" DisplayName="If Laboratory" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_19">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Assign DisplayName="Store Laboratory" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_144">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("7 Recovery facility")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Laboratory</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Assign DisplayName="Store Blank" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_145">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("7 Recovery facility")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                    <Assign DisplayName="Store Name" sap:VirtualizedContainerService.HintSize="876,60" sap2010:WorkflowViewState.IdRef="Assign_101">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("7 Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Name:).*?(?=Address:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Address" sap:VirtualizedContainerService.HintSize="876,60" sap2010:WorkflowViewState.IdRef="Assign_102">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("7 Address")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Address:).*(?=Country:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Country" sap:VirtualizedContainerService.HintSize="876,60" sap2010:WorkflowViewState.IdRef="Assign_150">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("7 Country")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Country:).*(?=Contact Person:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[OUT_dictData(&quot;Page &quot; &amp; intCurrentPage + 1)(&quot;7 Country&quot;).Trim = &quot;&quot;]" DisplayName="If Country is blank" sap:VirtualizedContainerService.HintSize="876,208" sap2010:WorkflowViewState.IdRef="If_25">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Throw DisplayName="Throw Data Exception" Exception="[new InvalidDataException(&quot;Box 7 Country is not formatted correctly.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
                      </If.Then>
                    </If>
                    <Assign DisplayName="Store Contact Person" sap:VirtualizedContainerService.HintSize="876,60" sap2010:WorkflowViewState.IdRef="Assign_103">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("7 Contact Person")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Contact Person:).*?(?=Tel:)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Tel" sap:VirtualizedContainerService.HintSize="876,60" sap2010:WorkflowViewState.IdRef="Assign_104">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("7 Tel")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Tel)\.?:(?'match'.*?$)(?=Email)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Groups("match").Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Email" sap:VirtualizedContainerService.HintSize="876,60" sap2010:WorkflowViewState.IdRef="Assign_105">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("7 Email")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Email:).*?$", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 8" sap:VirtualizedContainerService.HintSize="918,500" sap2010:WorkflowViewState.IdRef="Sequence_39">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 8" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_106">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=8\. Recovery operation).*?(?=9\.)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store R-code.D-code (4)" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_107">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("8 R-code.D-code (4)")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "R\d{1,2}", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[OUT_dictData(&quot;Page &quot; &amp; intCurrentPage + 1)(&quot;8 R-code.D-code (4)&quot;).Trim = &quot;&quot;]" DisplayName="If Code is blank" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_26">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Throw DisplayName="Throw Data Exception" Exception="[new InvalidDataException(&quot;Box 8 R-Code is not formatted correctly.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
                      </If.Then>
                    </If>
                  </Sequence>
                  <Sequence DisplayName="Box 9" sap:VirtualizedContainerService.HintSize="918,252" sap2010:WorkflowViewState.IdRef="Sequence_40">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 9" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_146">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=9\. Usual).*?(?=7\. Recovery)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Description" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_108">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("9 Usual description of the waste")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=description of the waste:).*?$", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 10" sap:VirtualizedContainerService.HintSize="918,1000" sap2010:WorkflowViewState.IdRef="Sequence_41">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 10" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_109">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=10\. Waste identification \(fill in relevant codes\):).*?(?=11\.)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Basel Annex IX" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_110">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("10 (i) Basel Annex IX")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Basel Annex IX:).*?(?=\(ii\))", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[OUT_dictData(&quot;Page &quot; &amp; intCurrentPage + 1)(&quot;10 (i) Basel Annex IX&quot;).Trim = &quot;&quot;]" DisplayName="If Basel Annex is blank" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_27">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Throw DisplayName="Throw Data Exception" Exception="[new InvalidDataException(&quot;Box 10 Basel Annex is not formatted correctly.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_6" />
                      </If.Then>
                    </If>
                    <Assign DisplayName="Store (ii) OECD (if different from (i))" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_111">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("10 (ii) OECD (if different from (i))")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=OECD \(if different from \(i\)\):).*?(?=\(iii\))", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store (iii) Annex IIIA (4)" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_112">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("10 (iii) Annex IIIA (4)")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Annex IIIA \(4\):).*?(?=\(iv\))", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store (iv) Annex IIIB (5)" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_113">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("10 (iv) Annex IIIB (5)")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Annex IIIB \(5\):).*?(?=\(v\))", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store (v) EC list of wastes" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_114">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("10 (v) EC list of wastes")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=EC list of waste:).*?(?=\(vi\))", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store (vi) National Code" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_115">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("10 (vi) National Code")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=National Code:).*$", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 11" sap:VirtualizedContainerService.HintSize="918,452" sap2010:WorkflowViewState.IdRef="Sequence_42">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 11" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_116">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=11\. Countries\/states concerned:).*?(?=12\. Declaration)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Export/dispatch" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_117">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("11 Export/dispatch")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Import\/destination ).*", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim.Split({environment.Newline}, nothing)(0)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Import/destination" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_118">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("11 Import/destination")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Import\/destination ).*", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim.Split({environment.Newline}, nothing).Last]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Transit" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_119">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("11 Transit")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[string.Join(" ", Regex.Match(strBoxText, "(?&lt;=Import\/destination ).*", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim.Split({environment.Newline}, nothing).Skip(1).Reverse.Skip(1).Reverse)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 12" sap:VirtualizedContainerService.HintSize="918,352" sap2010:WorkflowViewState.IdRef="Sequence_43">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 12" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_122">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=12\. Declaration).*?(?=13\.)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_123">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("12 Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Name:).*?(?=Date)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Date" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_124">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("12 Date")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Date:).*?(?=Signature)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim.Replace(".","/")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 13" sap:VirtualizedContainerService.HintSize="918,352" sap2010:WorkflowViewState.IdRef="Sequence_44">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 13" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_125">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=13\. Signature).*?(?=14\.)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_126">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("13 Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Name:).*?(?=Date)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Date" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_127">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("13 Date")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Date:).*?(?=Signature)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim.Replace(".","/")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                  <Sequence DisplayName="Box 14" sap:VirtualizedContainerService.HintSize="918,552" sap2010:WorkflowViewState.IdRef="Sequence_45">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Store Box 14" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_128">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strBoxText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strFullText, "(?&lt;=14\. Shipment).*?(?=\(1\) Information)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Facility Type" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_133">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("14 Facility Type")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=received at ).*?(?=Quantity)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Quantity Received" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_134">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("14 Quantity Received")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Quantity received:).*?(?=Name)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_129">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("14 Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Name:).*?(?=Date)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Store Date" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_130">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("14 Date")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Regex.Match(strBoxText, "(?&lt;=Date:).*?(?=Signature)", RegexOptions.Singleline or RegexOptions.IgnoreCase).Value.Trim.Replace(".","/")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </Sequence>
                <If Condition="[OUT_dictData(&quot;Page &quot; &amp; intCurrentPage + 1).ContainsKey(&quot;Ref Number&quot;) = False]" DisplayName="If REF not set" sap:VirtualizedContainerService.HintSize="960,208" sap2010:WorkflowViewState.IdRef="If_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign DisplayName="Store Ref" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("Ref Number")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[fileCurrentFile.Name.Split({" - "}, nothing).Last.Trim.Replace(".pdf","")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
                <Assign DisplayName="Add Date Received" sap:VirtualizedContainerService.HintSize="960,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("DateReceived")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(OUT_mailCurrentEmail.Headers("Date")).ToString("dd.MM.yyyy")]</InArgument>
                  </Assign.Value>
                </Assign>
                <Sequence DisplayName="Regex body info" sap:VirtualizedContainerService.HintSize="960,572" sap2010:WorkflowViewState.IdRef="Sequence_49">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Load Date" sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_159">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("Load Date")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[Regex.Match(OUT_mailCurrentEmail.Body, _
"(?&lt;=Annex VII REF Number: " &amp; OUT_dictData("Page " &amp; intCurrentPage + 1)("Ref Number") &amp; ")(?'anchor'.*?)(?&lt;=Load Date:)(?'match'.*?)(?=Load Time)", _
RegexOptions.Singleline Or RegexOptions.IgnoreCase).Groups("match").Value.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Load Time" sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_160">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("Load Time")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[Regex.Match(OUT_mailCurrentEmail.Body, _
"(?&lt;=Annex VII REF Number: " &amp; OUT_dictData("Page " &amp; intCurrentPage + 1)("Ref Number") &amp; ")(?'anchor'.*?)(?&lt;=Load Time:)(?'match'.*?)(?=Booking)" _
, RegexOptions.Singleline Or RegexOptions.IgnoreCase).Groups("match").Value.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Booking REF" sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_161">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("Booking REF Number")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[Regex.Match(OUT_mailCurrentEmail.Body, _
"(?&lt;=Annex VII REF Number: " &amp; OUT_dictData("Page " &amp; intCurrentPage + 1)("Ref Number") &amp; ")(?'anchor'.*?)(?&lt;=Booking REF Number::)(?'match'.*?)(?=Intend To)", _
RegexOptions.Singleline Or RegexOptions.IgnoreCase).Groups("match").Value.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Store PERN" sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_162">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("9 Intended PERN claim percentage")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[Regex.Match(OUT_mailCurrentEmail.Body, _
"(?&lt;=Annex VII REF Number: " &amp; OUT_dictData("Page " &amp; intCurrentPage + 1)("Ref Number") &amp; ")(?'anchor'.*?)(?&lt;=Intended PERN Claim Percentage:)(?'match'.*?)(?=\n)", _
RegexOptions.Singleline Or RegexOptions.IgnoreCase).Groups("match").Value.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Pern intention" sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_163">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[OUT_dictData("Page " &amp; intCurrentPage + 1)("Intend To Claim PERN")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[Regex.Match(OUT_mailCurrentEmail.Body, _
"(?&lt;=Annex VII REF Number: " &amp; OUT_dictData("Page " &amp; intCurrentPage + 1)("Ref Number") &amp; ")(?'anchor'.*?)(?&lt;=Intend To Claim PERN:)(?'match'.*?)(?=Intended)", _
RegexOptions.Singleline Or RegexOptions.IgnoreCase).Groups("match").Value.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <If Condition="[OUT_dictData(&quot;Page &quot; &amp; intCurrentPage + 1)(&quot;1 Name&quot;).Trim = &quot;&quot;]" DisplayName="If Not a valid annex" sap:VirtualizedContainerService.HintSize="960,286" sap2010:WorkflowViewState.IdRef="If_21">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <maes:RemoveFromDictionary x:TypeArguments="x:String, scg:Dictionary(x:String, x:String)" Dictionary="[OUT_dictData]" DisplayName="Remove from dictionary" sap:VirtualizedContainerService.HintSize="398,138" sap2010:WorkflowViewState.IdRef="RemoveFromDictionary`2_2" Key="[&quot;Page &quot; &amp; intCurrentPage + 1]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </maes:RemoveFromDictionary>
                  </If.Then>
                </If>
                <ui:CloseApplication DisplayName="Close Application 'Adobe'" sap:VirtualizedContainerService.HintSize="960,51" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
                  <ui:CloseApplication.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f53839b8-3483-4c73-97e6-afce6d97622b" InformativeScreenshot="cb6a0f446ff547c41016b17bd004fbbe" Selector="&lt;wnd app='acrord*.exe' cls='AcrobatSDIWindow' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:CloseApplication.Target>
                </ui:CloseApplication>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1006,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Move mail to exception then rethrow" sap:VirtualizedContainerService.HintSize="376,272" sap2010:WorkflowViewState.IdRef="Sequence_28">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MoveOutlookMessage Account="[IN_dictConfig(&quot;Email Account&quot;).ToString]" sap2010:Annotation.AnnotationText="Exception" DisplayName="Move Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,118" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_6" MailFolder="[IN_dictConfig(&quot;Email App Exception Folder&quot;)]" MailMessage="[OUT_mailCurrentEmail]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MoveOutlookMessage>
                    <Rethrow sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                  </Sequence>
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="ui:SelectorNotFoundException" sap:VirtualizedContainerService.HintSize="1006,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="ui:SelectorNotFoundException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:SelectorNotFoundException" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:CloseApplication DisplayName="Close Application 'Adobe'" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="CloseApplication_2">
                    <ui:CloseApplication.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f53839b8-3483-4c73-97e6-afce6d97622b" InformativeScreenshot="cb6a0f446ff547c41016b17bd004fbbe" Selector="&lt;wnd app='acrord*.exe' cls='AcrobatSDIWindow' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:CloseApplication.Target>
                  </ui:CloseApplication>
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="sri:COMException" sap:VirtualizedContainerService.HintSize="1006,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="sri:COMException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sri:COMException" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:CloseApplication DisplayName="Close Application 'Adobe'" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="CloseApplication_3">
                    <ui:CloseApplication.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f53839b8-3483-4c73-97e6-afce6d97622b" InformativeScreenshot="cb6a0f446ff547c41016b17bd004fbbe" Selector="&lt;wnd app='acrord*.exe' cls='AcrobatSDIWindow' /&gt;">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:CloseApplication.Target>
                  </ui:CloseApplication>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
  </Sequence>
</Activity>